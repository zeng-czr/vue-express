{"remainingRequest":"C:\\Users\\ht\\Desktop\\vue-express\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ht\\Desktop\\vue-express\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\ht\\Desktop\\vue-express\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ht\\Desktop\\vue-express\\src\\components\\uploadExcel\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ht\\Desktop\\vue-express\\src\\components\\uploadExcel\\index.vue","mtime":1696841002116},{"path":"C:\\Users\\ht\\Desktop\\vue-express\\babel.config.js","mtime":1696052669664},{"path":"C:\\Users\\ht\\Desktop\\vue-express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696052662415},{"path":"C:\\Users\\ht\\Desktop\\vue-express\\node_modules\\babel-loader\\lib\\index.js","mtime":1696052663280},{"path":"C:\\Users\\ht\\Desktop\\vue-express\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1696052662415},{"path":"C:\\Users\\ht\\Desktop\\vue-express\\node_modules\\vue-loader\\lib\\index.js","mtime":1696052663650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCBYTFNYIGZyb20gJ3hsc3gnOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGJlZm9yZVVwbG9hZDogRnVuY3Rpb24sCiAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lCiAgICBvblN1Y2Nlc3M6IEZ1bmN0aW9uIC8vIGVzbGludC1kaXNhYmxlLWxpbmUKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGV4Y2VsRGF0YTogewogICAgICAgIGhlYWRlcjogbnVsbCwKICAgICAgICAvL2V4Y2Vs6KGo5aS0CiAgICAgICAgcmVzdWx0czogbnVsbCAvL2V4Y2Vs5pWw5o2uCiAgICAgIH0KICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgZ2VuZXJhdGVEYXRhKHsKICAgICAgaGVhZGVyLAogICAgICByZXN1bHRzCiAgICB9KSB7CiAgICAgIHRoaXMuZXhjZWxEYXRhLmhlYWRlciA9IGhlYWRlcjsKICAgICAgdGhpcy5leGNlbERhdGEucmVzdWx0cyA9IHJlc3VsdHM7CiAgICAgIHRoaXMub25TdWNjZXNzICYmIHRoaXMub25TdWNjZXNzKHRoaXMuZXhjZWxEYXRhKTsKICAgIH0sCiAgICAvLyBkcm9w55qE5pW05Liq6L+H56iL5qCh6aqM5ouW5ou95paH5Lu25piv5ZCm5ZSv5LiA77yM5LiU5piv5ZCm5Li6ZXhjZWznsbvlnovmlofku7YKICAgIGhhbmRsZURyb3AoZSkgewogICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgIGlmICh0aGlzLmxvYWRpbmcpIHJldHVybjsKICAgICAgY29uc3QgZmlsZXMgPSBlLmRhdGFUcmFuc2Zlci5maWxlczsKICAgICAgaWYgKGZpbGVzLmxlbmd0aCAhPT0gMSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ09ubHkgc3VwcG9ydCB1cGxvYWRpbmcgb25lIGZpbGUhJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGNvbnN0IHJhd0ZpbGUgPSBmaWxlc1swXTsgLy8gb25seSB1c2UgZmlsZXNbMF0KCiAgICAgIGlmICghdGhpcy5pc0V4Y2VsKHJhd0ZpbGUpKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcignT25seSBzdXBwb3J0cyB1cGxvYWQgLnhsc3gsIC54bHMsIC5jc3Ygc3VmZml4IGZpbGVzJyk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHRoaXMudXBsb2FkKHJhd0ZpbGUpOwogICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICB9LAogICAgaXNFeGNlbChmaWxlKSB7CiAgICAgIHJldHVybiAvXC4oeGxzeHx4bHN8Y3N2KSQvLnRlc3QoZmlsZS5uYW1lKTsKICAgIH0sCiAgICBoYW5kbGVEcmFnb3ZlcihlKSB7CiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgZS5kYXRhVHJhbnNmZXIuZHJvcEVmZmVjdCA9ICdjb3B5JzsKICAgIH0sCiAgICBoYW5kbGVVcGxvYWQoKSB7CiAgICAgIHRoaXMuJHJlZnNbJ2V4Y2VsLXVwbG9hZC1pbnB1dCddLmNsaWNrKCk7CiAgICB9LAogICAgaGFuZGxlQ2xpY2soZSkgewogICAgICBjb25zdCBmaWxlcyA9IGUudGFyZ2V0LmZpbGVzOwogICAgICBjb25zdCByYXdGaWxlID0gZmlsZXNbMF07IC8vIG9ubHkgdXNlIGZpbGVzWzBdCiAgICAgIGNvbnNvbGUubG9nKHJhd0ZpbGUpOwogICAgICBpZiAoIXJhd0ZpbGUpIHJldHVybjsKICAgICAgdGhpcy51cGxvYWQocmF3RmlsZSk7CiAgICB9LAogICAgdXBsb2FkKHJhd0ZpbGUpIHsKICAgICAgdGhpcy4kcmVmc1snZXhjZWwtdXBsb2FkLWlucHV0J10udmFsdWUgPSBudWxsOyAvLyBmaXggY2FuJ3Qgc2VsZWN0IHRoZSBzYW1lIGV4Y2VsCgogICAgICBpZiAoIXRoaXMuYmVmb3JlVXBsb2FkKSB7CiAgICAgICAgdGhpcy5yZWFkZXJEYXRhKHJhd0ZpbGUpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBjb25zdCBiZWZvcmUgPSB0aGlzLmJlZm9yZVVwbG9hZChyYXdGaWxlKTsKICAgICAgaWYgKGJlZm9yZSkgewogICAgICAgIHRoaXMucmVhZGVyRGF0YShyYXdGaWxlKTsKICAgICAgfQogICAgfSwKICAgIHJlYWRlckRhdGEocmF3RmlsZSkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGUgPT4gewogICAgICAgICAgY29uc3QgZGF0YSA9IGUudGFyZ2V0LnJlc3VsdDsKICAgICAgICAgIGNvbnN0IHdvcmtib29rID0gWExTWC5yZWFkKGRhdGEsIHsKICAgICAgICAgICAgdHlwZTogJ2FycmF5JwogICAgICAgICAgfSk7CiAgICAgICAgICBjb25zdCBmaXJzdFNoZWV0TmFtZSA9IHdvcmtib29rLlNoZWV0TmFtZXNbMF07CiAgICAgICAgICBjb25zdCB3b3Jrc2hlZXQgPSB3b3JrYm9vay5TaGVldHNbZmlyc3RTaGVldE5hbWVdOwogICAgICAgICAgY29uc29sZS5sb2cod29ya3NoZWV0KTsKICAgICAgICAgIGNvbnN0IGhlYWRlciA9IHRoaXMuZ2V0SGVhZGVyUm93KHdvcmtzaGVldCk7CiAgICAgICAgICBjb25zdCByZXN1bHRzID0gWExTWC51dGlscy5zaGVldF90b19qc29uKHdvcmtzaGVldCk7CiAgICAgICAgICB0aGlzLmdlbmVyYXRlRGF0YSh7CiAgICAgICAgICAgIGhlYWRlciwKICAgICAgICAgICAgcmVzdWx0cwogICAgICAgICAgfSk7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIHJlc29sdmUoKTsKICAgICAgICB9OwogICAgICAgIHJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihyYXdGaWxlKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0SGVhZGVyUm93KHNoZWV0KSB7CiAgICAgIGNvbnN0IGhlYWRlcnMgPSBbXTsKICAgICAgY29uc3QgcmFuZ2UgPSBYTFNYLnV0aWxzLmRlY29kZV9yYW5nZShzaGVldFsnIXJlZiddKTsKICAgICAgbGV0IEM7CiAgICAgIGNvbnN0IFIgPSByYW5nZS5zLnI7CiAgICAgIGNvbnNvbGUubG9nKHJhbmdlKTsKICAgICAgLyogc3RhcnQgaW4gdGhlIGZpcnN0IHJvdyAqLwogICAgICBmb3IgKEMgPSByYW5nZS5zLmM7IEMgPD0gcmFuZ2UuZS5jOyArK0MpIHsKICAgICAgICAvKiB3YWxrIGV2ZXJ5IGNvbHVtbiBpbiB0aGUgcmFuZ2UgKi8KICAgICAgICBjb25zdCBjZWxsID0gc2hlZXRbWExTWC51dGlscy5lbmNvZGVfY2VsbCh7CiAgICAgICAgICBjOiBDLAogICAgICAgICAgcjogUgogICAgICAgIH0pXTsKICAgICAgICAvKiBmaW5kIHRoZSBjZWxsIGluIHRoZSBmaXJzdCByb3cgKi8KICAgICAgICBsZXQgaGRyID0gJ1VOS05PV04gJyArIEM7IC8vIDwtLSByZXBsYWNlIHdpdGggeW91ciBkZXNpcmVkIGRlZmF1bHQKICAgICAgICBpZiAoY2VsbCAmJiBjZWxsLnQpIGhkciA9IFhMU1gudXRpbHMuZm9ybWF0X2NlbGwoY2VsbCk7CiAgICAgICAgaGVhZGVycy5wdXNoKGhkcik7CiAgICAgIH0KICAgICAgcmV0dXJuIGhlYWRlcnM7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["XLSX","props","beforeUpload","Function","onSuccess","data","loading","excelData","header","results","methods","generateData","handleDrop","e","stopPropagation","preventDefault","files","dataTransfer","length","$message","error","rawFile","isExcel","upload","file","test","name","handleDragover","dropEffect","handleUpload","$refs","click","handleClick","target","console","log","value","readerData","before","Promise","resolve","reject","reader","FileReader","onload","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","getHeaderRow","utils","sheet_to_json","readAsArrayBuffer","sheet","headers","range","decode_range","C","R","s","r","c","cell","encode_cell","hdr","t","format_cell","push"],"sources":["src/components/uploadExcel/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"uploadComponent\">\r\n    <input ref=\"excel-upload-input\" class=\"input\" type=\"file\" accept=\".xlsx , .xls\" @change=\"handleClick\">\r\n    <div class=\"drop\" @drop=\"handleDrop\" @dragover=\"handleDragover\" @dragenter=\"handleDragover\">\r\n      <i class=\"el-icon-upload\" style=\"font-size: 60px; color: #727272;\"></i><br/>\r\n      <p>Drop excel file here or <em :loading=\"loading\" size=\"mini\" type=\"primary\" @click=\"handleUpload\">Browse</em></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport XLSX from 'xlsx'\r\n\r\nexport default {\r\n  props: {\r\n    beforeUpload: Function, // eslint-disable-line\r\n    onSuccess: Function// eslint-disable-line\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      excelData: {\r\n        header: null,//excel表头\r\n        results: null//excel数据\r\n\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    generateData({ header, results }) {\r\n      this.excelData.header = header\r\n      this.excelData.results = results\r\n      this.onSuccess && this.onSuccess(this.excelData)\r\n    },\r\n    // drop的整个过程校验拖拽文件是否唯一，且是否为excel类型文件\r\n    handleDrop(e) {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      if (this.loading) return\r\n      const files = e.dataTransfer.files\r\n      if (files.length !== 1) {\r\n        this.$message.error('Only support uploading one file!')\r\n        return\r\n      }\r\n      const rawFile = files[0] // only use files[0]\r\n      \r\n      if (!this.isExcel(rawFile)) {\r\n        this.$message.error('Only supports upload .xlsx, .xls, .csv suffix files')\r\n        return false\r\n      }\r\n      this.upload(rawFile)\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n    },\r\n    isExcel(file) {\r\n      return /\\.(xlsx|xls|csv)$/.test(file.name)\r\n    },\r\n    handleDragover(e) {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      e.dataTransfer.dropEffect = 'copy'\r\n    },\r\n    handleUpload() {\r\n      this.$refs['excel-upload-input'].click()\r\n    },\r\n    handleClick(e) {\r\n      const files = e.target.files\r\n      const rawFile = files[0] // only use files[0]\r\n      console.log(rawFile)\r\n      if (!rawFile) return\r\n      this.upload(rawFile)\r\n    },\r\n    upload(rawFile) {\r\n      this.$refs['excel-upload-input'].value = null // fix can't select the same excel\r\n\r\n      if (!this.beforeUpload) {\r\n        this.readerData(rawFile)\r\n        return\r\n      }\r\n      const before = this.beforeUpload(rawFile)\r\n      if (before) {\r\n        this.readerData(rawFile)\r\n      }\r\n    },\r\n    readerData(rawFile) {\r\n      this.loading = true\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.onload = e => {\r\n          const data = e.target.result\r\n          const workbook = XLSX.read(data, { type: 'array' })\r\n          const firstSheetName = workbook.SheetNames[0]\r\n          const worksheet = workbook.Sheets[firstSheetName]\r\n          console.log(worksheet)\r\n          const header = this.getHeaderRow(worksheet)\r\n          const results = XLSX.utils.sheet_to_json(worksheet)\r\n          this.generateData({ header, results })\r\n          this.loading = false\r\n          resolve()\r\n        }\r\n        reader.readAsArrayBuffer(rawFile)\r\n      })\r\n    },\r\n    getHeaderRow(sheet) {\r\n      const headers = []\r\n      const range = XLSX.utils.decode_range(sheet['!ref'])\r\n      let C\r\n      const R = range.s.r\r\n      console.log(range)\r\n      /* start in the first row */\r\n      for (C = range.s.c; C <= range.e.c; ++C) { /* walk every column in the range */\r\n        const cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]\r\n        /* find the cell in the first row */\r\n        let hdr = 'UNKNOWN ' + C // <-- replace with your desired default\r\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\r\n        headers.push(hdr)\r\n      }\r\n      return headers\r\n    },\r\n    \r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.uploadComponent{\r\n  .input{\r\n    display: none;\r\n  }\r\n  .drop{\r\n    height: 200px;\r\n    margin: 20px;\r\n    border: 2px dotted #333;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    em{\r\n      text-decoration: underline;\r\n      cursor: pointer;\r\n      color: #409EFF;\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":"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"}]}